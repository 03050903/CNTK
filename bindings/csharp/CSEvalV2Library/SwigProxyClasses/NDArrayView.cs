//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace CNTK {

public class NDArrayView : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal NDArrayView(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(NDArrayView obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~NDArrayView() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          CNTKLibPINVOKE.delete_NDArrayView(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public NDArrayView(DataType dataType, NDShape viewShape, SWIGTYPE_p_void dataBuffer, uint bufferSizeInBytes, DeviceDescriptor device, bool readOnly) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_0((int)dataType, NDShape.getCPtr(viewShape), SWIGTYPE_p_void.getCPtr(dataBuffer), bufferSizeInBytes, DeviceDescriptor.getCPtr(device), readOnly), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(DataType dataType, NDShape viewShape, SWIGTYPE_p_void dataBuffer, uint bufferSizeInBytes, DeviceDescriptor device) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_1((int)dataType, NDShape.getCPtr(viewShape), SWIGTYPE_p_void.getCPtr(dataBuffer), bufferSizeInBytes, DeviceDescriptor.getCPtr(device)), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(DataType dataType, StorageFormat storageType, NDShape viewShape, DeviceDescriptor device) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_5((int)dataType, (int)storageType, NDShape.getCPtr(viewShape), DeviceDescriptor.getCPtr(device)), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(DataType dataType, NDShape viewShape, DeviceDescriptor device) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_6((int)dataType, NDShape.getCPtr(viewShape), DeviceDescriptor.getCPtr(device)), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(double value, DataType dataType, NDShape viewShape, DeviceDescriptor device, bool readOnly) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_17(value, (int)dataType, NDShape.getCPtr(viewShape), DeviceDescriptor.getCPtr(device), readOnly), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(double value, DataType dataType, NDShape viewShape, DeviceDescriptor device) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_18(value, (int)dataType, NDShape.getCPtr(viewShape), DeviceDescriptor.getCPtr(device)), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(double value, DataType dataType, NDShape viewShape) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_19(value, (int)dataType, NDShape.getCPtr(viewShape)), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(double value, DataType dataType) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_20(value, (int)dataType), true) {
  }

  public NDArrayView(double value) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_21(value), true) {
  }

  public DeviceDescriptor Device() {
    DeviceDescriptor ret = new DeviceDescriptor(CNTKLibPINVOKE.NDArrayView_Device(swigCPtr), true);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DataType GetDataType() {
    DataType ret = (DataType)CNTKLibPINVOKE.NDArrayView_GetDataType(swigCPtr);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public StorageFormat GetStorageFormat() {
    StorageFormat ret = (StorageFormat)CNTKLibPINVOKE.NDArrayView_GetStorageFormat(swigCPtr);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public NDShape Shape() {
    NDShape ret = new NDShape(CNTKLibPINVOKE.NDArrayView_Shape(swigCPtr), true);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsSparse() {
    bool ret = CNTKLibPINVOKE.NDArrayView_IsSparse(swigCPtr);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsReadOnly() {
    bool ret = CNTKLibPINVOKE.NDArrayView_IsReadOnly(swigCPtr);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetValue(float value) {
    CNTKLibPINVOKE.NDArrayView_SetValue__SWIG_0(swigCPtr, value);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetValue(double value) {
    CNTKLibPINVOKE.NDArrayView_SetValue__SWIG_1(swigCPtr, value);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView DeepClone(DeviceDescriptor device, bool readOnly) {
    global::System.IntPtr cPtr = CNTKLibPINVOKE.NDArrayView_DeepClone__SWIG_0(swigCPtr, DeviceDescriptor.getCPtr(device), readOnly);
    NDArrayView ret = (cPtr == global::System.IntPtr.Zero) ? null : new NDArrayView(cPtr, true);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public NDArrayView DeepClone(DeviceDescriptor device) {
    global::System.IntPtr cPtr = CNTKLibPINVOKE.NDArrayView_DeepClone__SWIG_1(swigCPtr, DeviceDescriptor.getCPtr(device));
    NDArrayView ret = (cPtr == global::System.IntPtr.Zero) ? null : new NDArrayView(cPtr, true);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public NDArrayView DeepClone(bool readOnly) {
    global::System.IntPtr cPtr = CNTKLibPINVOKE.NDArrayView_DeepClone__SWIG_2(swigCPtr, readOnly);
    NDArrayView ret = (cPtr == global::System.IntPtr.Zero) ? null : new NDArrayView(cPtr, true);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public NDArrayView DeepClone() {
    global::System.IntPtr cPtr = CNTKLibPINVOKE.NDArrayView_DeepClone__SWIG_3(swigCPtr);
    NDArrayView ret = (cPtr == global::System.IntPtr.Zero) ? null : new NDArrayView(cPtr, true);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public NDArrayView Alias(bool readOnly) {
    global::System.IntPtr cPtr = CNTKLibPINVOKE.NDArrayView_Alias__SWIG_0(swigCPtr, readOnly);
    NDArrayView ret = (cPtr == global::System.IntPtr.Zero) ? null : new NDArrayView(cPtr, true);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public NDArrayView Alias() {
    global::System.IntPtr cPtr = CNTKLibPINVOKE.NDArrayView_Alias__SWIG_1(swigCPtr);
    NDArrayView ret = (cPtr == global::System.IntPtr.Zero) ? null : new NDArrayView(cPtr, true);
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void CopyFrom(NDArrayView source) {
    CNTKLibPINVOKE.NDArrayView_CopyFrom(swigCPtr, NDArrayView.getCPtr(source));
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ChangeDevice(DeviceDescriptor device) {
    CNTKLibPINVOKE.NDArrayView_ChangeDevice(swigCPtr, DeviceDescriptor.getCPtr(device));
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(NDShape viewShape, float[] dataBuffer, uint numBufferElements, DeviceDescriptor device, bool readOnly) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_22(NDShape.getCPtr(viewShape), dataBuffer, numBufferElements, DeviceDescriptor.getCPtr(device), readOnly), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(NDShape viewShape, float[] dataBuffer, uint numBufferElements, DeviceDescriptor device) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_23(NDShape.getCPtr(viewShape), dataBuffer, numBufferElements, DeviceDescriptor.getCPtr(device)), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(NDShape viewShape, double[] dataBuffer, uint numBufferElements, DeviceDescriptor device, bool readOnly) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_24(NDShape.getCPtr(viewShape), dataBuffer, numBufferElements, DeviceDescriptor.getCPtr(device), readOnly), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

  public NDArrayView(NDShape viewShape, double[] dataBuffer, uint numBufferElements, DeviceDescriptor device) : this(CNTKLibPINVOKE.new_NDArrayView__SWIG_25(NDShape.getCPtr(viewShape), dataBuffer, numBufferElements, DeviceDescriptor.getCPtr(device)), true) {
    if (CNTKLibPINVOKE.SWIGPendingException.Pending) throw CNTKLibPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
